[
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About UHC Analytics Corner",
    "section": "",
    "text": "Note\n\n\n\nThe analytics corner is not official in any capacity and is just a proof of concept. The language language is still being drafted and a work in progress. Feel free to Edit this page or report an issue."
  },
  {
    "objectID": "about.html#goals",
    "href": "about.html#goals",
    "title": "About UHC Analytics Corner",
    "section": "Goals",
    "text": "Goals\nThe overarching goal of Quarto is to build bridges across working groups at Dornsife and the UHC by making the process of collaborating on problems and sharing technical expertise dramatically better. We hope to do this in several dimensions:\n\nA automated way for community members to submit issues/requests\nAn accessible website where we can share solutions. Analytic problems are often not unique and solutions may benefit others.\nProvide training for how to collaborative code.\n\nEverything here is open source software licensed under the MIT license. We believe that analytic problems are not unique and it’s better for everyone if the tools, issues and solutions used for research and science are free and open. Reproducibility, widespread sharing of knowledge and techniques, and the leveling of the playing field by eliminating cost barriers are but a few of the shared benefits of free software in science."
  },
  {
    "objectID": "about.html#project",
    "href": "about.html#project",
    "title": "About UHC Analytics Corner",
    "section": "Project",
    "text": "Project\nThe core technologies that drive this project including:\n\nQuarto is an open-source scientific and technical publishing system built on Pandoc. It allows us to authoer documents as plain text mardkwon or Jupyter notebooks and render high-quality articles, reports, presentations, websites, blogs, and books in HTML, PDF, MS Word, ePub, and more.\nGitHub is a only developer platform which we utilize to open source our codebase, mangage projects, allow issue submissions, have discussions and host our website. The majority of GitHub features are free for academics.\nTidyverse is an opinionated collection of R packages designed for data science. All packages share an underlying design philosophy, grammar, and data structures. We use these packages and other packages within this ecosystem to do solve problems that involve data management, visualization, dashboards and build packages."
  },
  {
    "objectID": "about.html#contribute",
    "href": "about.html#contribute",
    "title": "About UHC Analytics Corner",
    "section": "Contribute",
    "text": "Contribute\nYou can contribute in many ways. More details will come but the general idea is:\n\nBy opening issues to provide feedback and share ideas.\nBy submitting Pull Request (PR) to fix opened issues\nBy submitting Pull Request (PR) to suggest new features (it is considered good practice to open an issue for discussion before working on a pull request for a new feature)."
  },
  {
    "objectID": "docs/blog/issues/7 - Abortion and Paid Family Leave figure/quarto.html",
    "href": "docs/blog/issues/7 - Abortion and Paid Family Leave figure/quarto.html",
    "title": "Visualization faceted by state",
    "section": "",
    "text": "https://github.com/Drexel-UHC/analytics-corner/issues/7\n\nI’m hoping to make a figure that shows different policy statuses of states (abortion ban, proposed abortion ban, no abortion ban; Paid family leave, no paid family leave; paid family leave preemption, no preemption), with the states in the location of the US map…\nI think geofacet mightttt get us close to the figure I’m hoping to make, but not quitee there."
  },
  {
    "objectID": "docs/blog/issues/7 - Abortion and Paid Family Leave figure/quarto.html#plot",
    "href": "docs/blog/issues/7 - Abortion and Paid Family Leave figure/quarto.html#plot",
    "title": "Visualization faceted by state",
    "section": "Plot",
    "text": "Plot\n\n\nCode\n## Set coordinates\nheight = 10 \npadding_x = 1\nwidth = 8\nrect_xmin = padding_x\nrect_xmax = width + padding_x\nrect_x_mean = mean(c(rect_xmin,rect_xmax))\nrect_ymin = height/3\nrect_ymax = rect_ymin*2\n\n## Manual colors for data features\nabortion_colors = c(\"0\" = \"#e7e8e9\",\n                    \"1\" = \"#8a8c8f\", \n                    \"2\" = \"#000000\")\nxwalk_colors = c(abortion_colors,\n                 \"white\" = \"white\",\n                 \"black\" = \"black\",\n                 \"0_family_leave\" = \"white\",\n                 \"1_family_leave\" = \"#00aeef\",\n                 \"0_preemption\" = \"white\",\n                 \"1_preemption\" = \"#f1592a\")     \n\n## Operationalize data for plot\ndata_processed = data %>% \n  ## Append coordinates to data for geom_polygon\n  mutate(top_triangle_x = list(c(rect_xmin,rect_xmax,rect_x_mean)),\n         top_triangle_y = list(c(rect_ymax,rect_ymax,height)),\n         bottom_triangle_x = list(c(rect_xmin,rect_xmax,rect_x_mean)),\n         bottom_triangle_y = list(c(rect_ymin,rect_ymin,0))\n  ) %>% \n  unnest(cols = c(top_triangle_x, top_triangle_y, bottom_triangle_x, bottom_triangle_y)) %>% \n  ## operationalize colors\n  mutate(\n    state_text = ifelse(as.numeric(abortion_ban_risk)>1, \"white\",\"black\"),\n    family_leave = paste0(family_leave,\"_family_leave\"),\n    preemption = paste0(preemption,\"_preemption\"))\n\n\n## create a function to make basic shapes\ngeom_hex_for_alina = function(gg){\n  gg +\n    ## add rectangle\n    geom_rect(aes(xmin = rect_xmin, xmax = rect_xmax,   \n                  ymin = rect_ymin, ymax = rect_ymax, \n                  fill = abortion_ban_risk)) +\n    ## Add state abbrv text\n    geom_text(aes(label = state, color = state_text),\n              x = height/2, y = height/2,\n              size = 3)+\n    ## Top triangle (family leave)\n    geom_polygon(aes(x=top_triangle_x,y=top_triangle_y, fill = family_leave)) + \n    ## Bottom triangle (preemption)\n    geom_polygon(aes(x = bottom_triangle_x, y = bottom_triangle_y, fill = preemption)) +   \n    ## Manual colors\n    scale_fill_manual(values = xwalk_colors) +\n    scale_color_manual(name = \"state_text\", values = xwalk_colors) +\n    theme_void()+ \n    theme(\n      ## Completely remove facet labels\n      strip.background = element_blank(),\n      strip.text.x = element_blank(),\n      ## Remove legend\n      legend.position = 'none'\n    )\n}\n\n## Test facet\nplot = data_processed %>% \n  ggplot()  %>% \n  geom_hex_for_alina() +\n  facet_geo(~ state, grid = \"us_state_grid2\") +\n  theme(plot.margin = margin(1, 1, 1, 1, \"cm\"))\nplot"
  },
  {
    "objectID": "docs/blog/issues/7 - Abortion and Paid Family Leave figure/quarto.html#legend-1-rectangle",
    "href": "docs/blog/issues/7 - Abortion and Paid Family Leave figure/quarto.html#legend-1-rectangle",
    "title": "Visualization faceted by state",
    "section": "Legend 1: Rectangle",
    "text": "Legend 1: Rectangle\n\n\nCode\nside = 10 \npadding = 1.5\nrect_width =  (side - 2*padding)/3\nlegend_y = 6\nlegend_height = 1.5\ndfa = tibble(xmin = padding + 0:2*rect_width,\n             xmax = padding + 1:3*rect_width,\n             ymin = legend_y,\n             ymax = legend_y + legend_height,\n             fill = unname(abortion_colors))\nlegend_risk = ggplot() + \n  ## Container (10 by 10)\n  geom_rect(aes(xmin = 0, xmax = 10, \n                ymin = 0, ymax = 10),\n            fill = \"white\") + \n  ## Legend for rectangles\n  geom_rect(dfa, mapping = \n              aes(xmin = xmin, xmax = xmax, \n                  ymin = ymin, ymax = ymax),\n            fill = dfa$fill) + \n  ## Left label\n  geom_text(aes(label = \"Accessible\"),\n            x = 1.5, y = legend_y - 1,\n            size = 3) +\n  ## Center label\n  geom_text(aes(label = \"Hostile\"),\n            x = 5, y = legend_y - 1,\n            size = 3) +\n  ## Rigth label\n  geom_text(aes(label = \"Illegal\"),\n            x =8.5, y = legend_y -1,\n            size = 3) +\n  theme_void()\n\ntitle_rect <- ggdraw() + \n  draw_label(\n    \"Rectangle show state\\nattitude towards abortion\",\n    fontface = 'bold',\n    x = 0.5,\n    hjust = 0.5,\n    size = 10\n  ) +\n  theme(\n    # add margin on the left of the drawing canvas,\n    # so title is aligned with left edge of first plot\n    plot.margin = margin(5, 0, 0, 0)\n  )\nrect_legend = plot_grid(\n  title_rect, legend_risk,\n  ncol = 1,\n  rel_heights = c(2, 8)\n)\n\nrect_legend"
  },
  {
    "objectID": "docs/blog/issues/7 - Abortion and Paid Family Leave figure/quarto.html#legend-2-paid-family-leave",
    "href": "docs/blog/issues/7 - Abortion and Paid Family Leave figure/quarto.html#legend-2-paid-family-leave",
    "title": "Visualization faceted by state",
    "section": "Legend 2: Paid family leave",
    "text": "Legend 2: Paid family leave\n\n\nCode\n## Create funciton to layout for legend\ngeom_hex_legend_for_alina = function(gg){\n  gg +\n    geom_rect(aes(xmin =  0 - 1*height*1.4, xmax = height + 1*height*1.4,   \n                  ymin = 0 - 1*height, ymax = height + 1*height),\n              fill = \"white\") \n}\n\n## Legend 2: Blue triangle\ntitle_hex_blue <- ggdraw() + \n  draw_label(\n    \"Blue Triangles show \\n paid family policy\",\n    fontface = 'bold',\n    x = 0.5,\n    hjust = 0.5,\n    size = 10\n  ) +\n  theme( plot.margin = margin(5, 0, 0, 0))\nlegend_hex_blue = data_processed %>% \n  filter(state == \"WA\") %>% \n  mutate(state = \"\") %>% \n  ggplot()  %>% \n  geom_hex_legend_for_alina() %>% \n  geom_hex_for_alina()\nhex_legend_blue = plot_grid(\n  title_hex_blue, legend_hex_blue,\n  ncol = 1,\n  rel_heights = c(2, 8)\n)\n\nhex_legend_blue"
  },
  {
    "objectID": "docs/blog/issues/7 - Abortion and Paid Family Leave figure/quarto.html#legend-3-preemption",
    "href": "docs/blog/issues/7 - Abortion and Paid Family Leave figure/quarto.html#legend-3-preemption",
    "title": "Visualization faceted by state",
    "section": "Legend 3: Preemption",
    "text": "Legend 3: Preemption\n\n\nCode\n## Legend 3: Red triangle \ntitle_hex_red <- ggdraw() + \n  draw_label(\n    \"Red triangles show state preemption\\nof paid family policies\",\n    fontface = 'bold',\n    x = 0.5,\n    hjust = 0.5,\n    size = 10\n  ) +\n  theme(\n    plot.margin = margin(5, 0, 0, 0)\n  )\nlegend_hex_red = data_processed %>% \n  filter(state == \"FL\") %>% \n  mutate(state = \"\") %>% \n  ggplot()  %>% \n  geom_hex_legend_for_alina() %>% \n  geom_hex_for_alina()\nhex_legend_red = plot_grid(\n  title_hex_red, legend_hex_red,\n  ncol = 1,\n  rel_heights = c(2, 8)\n)\nhex_legend_red"
  },
  {
    "objectID": "docs/faq/index.html",
    "href": "docs/faq/index.html",
    "title": "Frequently Asked Questions",
    "section": "",
    "text": "What is the Analytics Corner?\nBuild bridges at the UHC by open sourcing your analytic problems.\n\n\nHow do I submit an issue?\nPlease click on the button below to start a intake form which will generate a GitHub issue for you. Don’t forget to enter a title in your issue. Also all form inputs that have red asterisks require answers before the issue can be submitted. Please email rl627@drexel.edu if you have any questions or trouble submitting an issue.\n\n\nWhat is GitHub?\nGitHub is a online host for version control, project management and collaborative development. We have found it extremely useful in managing complex projects, sharing reproducible work/data and building bridges while working remotely. For academics it’s premium features are completely free. You can sign up at https://github.com/join; note, try to use your real name if you can and it is encouraged to upload a profile pic.\n\n\nHow can I contribute?\nYou can contribute by participating in discussions, opening issues or submiting Pull Requests to address open issues."
  },
  {
    "objectID": "docs/gallery/index.html",
    "href": "docs/gallery/index.html",
    "title": "Gallery",
    "section": "",
    "text": "Note\n\n\n\nCOMING SOON"
  },
  {
    "objectID": "docs/get-started/index.html",
    "href": "docs/get-started/index.html",
    "title": "Get Started",
    "section": "",
    "text": "Note\n\n\n\nCOMING SOON"
  },
  {
    "objectID": "docs/manuals/git-github/case-study-project-transition-management.html",
    "href": "docs/manuals/git-github/case-study-project-transition-management.html",
    "title": "Project managment",
    "section": "",
    "text": "There are many challenges aspects to building a collaborative coding project\n\nHow to communicate about code changes?\nHow to keep record of small details in a complex project?\nHow to have longer technical back and forth conversations while maintaining context throughout?\nHow to handle project transitions between staff changes?\n\nBelow we will use a private repository which cleans and synthesizes research from sensitive line level mortality data. A graduate research assistant wrote code to clean years 1990-2018 then graduate and is handed off to another RA to extend not only data range 1960-2020 but also to start synthesizing research. It is a great case study to show how Git/GitHub can help address the challenges above. It is a private repository so I will just show snippets."
  },
  {
    "objectID": "docs/manuals/git-github/case-study-project-transition-management.html#github-issues-to-track-changes-and-details",
    "href": "docs/manuals/git-github/case-study-project-transition-management.html#github-issues-to-track-changes-and-details",
    "title": "Project managment",
    "section": "2.2 GitHub Issues to track changes and details",
    "text": "2.2 GitHub Issues to track changes and details\nScenario: @isabelderamos has a question about a specific part of the project.\n\nHow can @isabelderamos communicate this?\nHow can collaborators reply in a way which clearly communicates how and why the codebase was updated?\n\n✨GitHub issues\n\n\n\nFigure 1: @isabelderamos can notify the team of a thing that needs to be done by creating a GitHub issue. She error she is getting and provides some context to the source of the problem. GitHub will notify teamates Figure 2\n\n\n\n\n\n\n\n\n\n\nFigure 2: GitHub will notify all teammates (@usamabilal and @ran-codes) of a new issue via email. @ran-codes has an idea of what the issue is and pushes some changes to the code, see Figure 3\n\n\n\n\n\n\n\n\n\n\nFigure 3: @ran-codes makes two changes saved as commits with messages detailing progress. Importantly these changes/commits are linked to this issue and @isabelderamos can click each commit to see exact code changes, see Figure 4.\n\n\n\n\n\n\n\n\n\n\nFigure 4: Clicking the commit shows code differences compared to the previous version. We can see that icd10 code U02 was manually added to three GHE tiers by modifying the highlighted lines of code. Going back to the issue, see Figure 5\n\n\n\n\n\n\n\n\n\n\nFigure 5: Right after the commits (Figure 4), @ran-codes describes the changes he made to provide context for the code updates above.\n\n\n\n\n\n\n\n\n\n\nFigure 6: @isabelderamos pulls the changes from GitHub to her local computer. After checking code changes resolved error are fixed, @isabelderamos notifies the team everything is okay and closes the issue!\n\n\n\n\n\n\n\n\nImportant\n\n\n\nGitHub issues are a feature designed to describe problems, track code changes related to those problems, stay up to date through email notifications, and facilitate efficient communication through feature rich markdown.\nEvery project can be broken down many smaller problems. GitHub issues is a workflow that allows us to focus, collaborate and document how we solve these small problems. This really helps keep organized in the context a of a large project which could have hundreds of issues and multiple collaborators."
  },
  {
    "objectID": "docs/manuals/git-github/case-study-project-transition-management.html#branches-to-manage-role-transitions",
    "href": "docs/manuals/git-github/case-study-project-transition-management.html#branches-to-manage-role-transitions",
    "title": "Project managment",
    "section": "2.2 Branches to manage role transitions",
    "text": "2.2 Branches to manage role transitions\nScenario: @usamabilal is PI. @ran-codes is an RA that wrote code to clean mortality data but is graduating. @isabelderamos is an incoming RA that is tasked with extending the functionality of the existing codebase.\n\n@usamabilal: mmm how to transition between two RA’s. I hope we can make these new changes without breaking the existing project.\n@isabelderamos 😰 omg… I am kind of new to R. What if I break something?\n@ran-codes: how can I share my code and remain in touch to answer any questions?\n\n✨Git Branches allow you to safely experiment with new ideas in a contained area of your repository.\n\n\n\nJul 15, 2021 @ran-codes creates a git repository with to track the main codebase (black line) and a branch within the repository aka duplicate codebase (green line) for @isabelderamos to work on without effecting the main codebase.\n\n\n\n\n\n\n\n\n\n\nJul 15, 2021 - Jul 20, 2022 @isabelderamos works on the duplicate branch (green-line).\n\n\n\n\n\n\n\n\n\n\nJan, 2 2022 Periodically we will test and validate @isabelderamos contributions and merge changes (green) to the main codebase (black).\n\n\n\n\n\n\n\n\n\n\nJul 20, 2022 @isabelderamos is graduating and is wrapping up her portion of work. @usamabilal validates merges changes (green) into main codebase (black) and culls/ends the branch.\n\n\n\n\n\n\n\n\nImportant\n\n\n\nGit branches allow you to develop features, fix bugs, or safely experiment with new ideas in a contained area of your repository. GitHub allow us to implement branches within the context of issues and commits to smooth document project evolution and allow for smooth transitions between collaborators.\nBranches may not be require when working alone. They are particularly useful when entry level RA enter a project to relieve pressure on the RA and protect the project from any regressive code changes."
  },
  {
    "objectID": "docs/manuals/git-github/case-study-version-control.html",
    "href": "docs/manuals/git-github/case-study-version-control.html",
    "title": "A Tale of Two Projects",
    "section": "",
    "text": "Does this look familiar?\n\n\n\n\n\nYou are doing version control! There is value of tracking changes to a project and having a history of previous versions."
  },
  {
    "objectID": "docs/manuals/git-github/case-study-version-control.html#git-github",
    "href": "docs/manuals/git-github/case-study-version-control.html#git-github",
    "title": "A Tale of Two Projects",
    "section": "1.2 Git + GitHub",
    "text": "1.2 Git + GitHub\nBelow is an example of a version control solution using Git and GitHub.\n\n\n\nFigure 1: The most recent version can be found at the GitHub repository page. Importantly we also have access to all previous saved versions of this git project, see Figure 2.\n\n\n\n\n\nFigure 2: Click the higlighted button to see all saved versions or commits of this git project, see Figure 3 .\n\n\n\n\n\nFigure 3: This page shows the projects history. We can see not only what progress occured each individual saved step but also navigate to the state of the project at those individual steps, see Figure 4.\n\n\n\n\n\nFigure 4: Click the higlighted button to see the version of the project at the first save point/commit, see Figure 5.\n\n\n\n\n\nFigure 5: This is the first version of the project, as you can see it is empty. However as we shown in Figure 3 we have access to the project state at every save point; this makes it easy to reset to a previous point if anything goes wrong."
  },
  {
    "objectID": "docs/manuals/git-github/case-study-version-control.html#takeaway",
    "href": "docs/manuals/git-github/case-study-version-control.html#takeaway",
    "title": "A Tale of Two Projects",
    "section": "1.3 Takeaway",
    "text": "1.3 Takeaway\n\n\n\n\n\n\nImportant\n\n\n\nThis approach of using a version control system (VCS) (Blischak, Davenport, and Wilson 2016) is an industry and academic (Ram 2013) best practice. It is much more ergonomic and reliable than manualy tracking versions."
  },
  {
    "objectID": "docs/manuals/git-github/git-github.html",
    "href": "docs/manuals/git-github/git-github.html",
    "title": "GitHub Desktop",
    "section": "",
    "text": "World"
  },
  {
    "objectID": "docs/manuals/git-github/learning-objectives.html",
    "href": "docs/manuals/git-github/learning-objectives.html",
    "title": "Overview",
    "section": "",
    "text": "Overview\nThe workshop will be split into three main sections. 1. Give present some previous use cases to demonstrate why you might want to learn git and GitHub. 2. Teach basics of the three technologies will learn (git, GitHub desktop, GitHub). 3. Live demo where two people collaborate together to finish a R&R.\n\n\nLearning Objectives\nThe specific learning objectives of this workshop are:\n\nLearn the difference between Git, GitHub Desktop and GitHub\nClone a remote repository\nLearn a basic git workflow modify-add-commit\nAdd and track changes with GitHub Desktop\nSave changes by committing with GitHub Desktop\nBest practices for commit messages\nPushing commits to Github with GitHub Desktop"
  },
  {
    "objectID": "docs/manuals/git-github/what-is-version-control.html",
    "href": "docs/manuals/git-github/what-is-version-control.html",
    "title": "What is version control",
    "section": "",
    "text": "Pay Attention\n\n\n\n\n\nUsing callouts is an effective way to highlight content that your reader give special consideration or attention."
  },
  {
    "objectID": "docs/manuals/welcome/1-about.html",
    "href": "docs/manuals/welcome/1-about.html",
    "title": "About",
    "section": "",
    "text": "Note\n\n\n\nComing soon!"
  },
  {
    "objectID": "docs/manuals/welcome/2-core-values.html",
    "href": "docs/manuals/welcome/2-core-values.html",
    "title": "Core values",
    "section": "",
    "text": "Note\n\n\n\nComing soon!"
  },
  {
    "objectID": "license.html",
    "href": "license.html",
    "title": "Open Source License",
    "section": "",
    "text": "Tip\n\n\n\nThe language in this license page is adapted directly from Quarto’s license page. We admire the job that Quarto has done building an open-source community and hope that this policy will help us do the same.\n\n\nUHC Analytics Corner is open source software licensed under the MIT license. We believe that it’s better for everyone if the tools used for research and science are free and open. Reproducibility, widespread sharing of knowledge and techniques, and the leveling of the playing field by eliminating cost barriers are but a few of the shared benefits of free software in science.\nThis project also makes use of several other open-source projects including:\n\n\n\nProject\nLicense\n\n\n\n\nQuarto\nGNU GPL v2\n\n\ntidyverse\nMIT"
  }
]