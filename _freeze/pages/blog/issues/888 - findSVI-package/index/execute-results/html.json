{
  "hash": "af46a3f34c18c94dbf6e94cacccc9af3",
  "result": {
    "markdown": "---\ndraft: true\nauthor: Ran Li\ndate: \"05/26/2023\"\ntitle: \"Test run: the DSWG's `findSVI` package!\"\ndescription: \"The data science group at the UHC has been working on a package to dynamically calculate SVI. Let's try it out.\"\ncategories:\n  - ChatGPT\nformat: \n  html:\n    toc: true\n    toc-location: left\n    df-print: paged\n    code-fold: true\n    code-tools: true\nexecute: \n  warning: false\neditor_options: \n  chunk_output_type: console\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(devtools)\ndevtools::install_github('heli-xu/findSVI')\n```\n:::\n\n\nWe have a request for SVI data at the ZCTA level.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(purrr)\ndf_request = tribble(\n  ~state, ~year, ~n,\n  \"AZ\", 2015, 8,\n  \"AZ\", 2016, 2,\n  \"AZ\", 2017, 2,\n  \"AZ\", 2018, 2,\n  \"AZ\", 2019, 3,\n  \"FL\", 2014, 4,\n  \"FL\", 2015, 8,\n  \"GA\", 2015, 8,\n  \"GA\", 2016, 2,\n  \"GA\", 2017, 2,\n  \"GA\", 2018, 2,\n  \"GA\", 2019, 3,\n  \"KY\", 2012, 4,\n  \"KY\", 2013, 4,\n  \"KY\", 2014, 4,\n  \"KY\", 2015, 8,\n  \"MA\", 2013, 4,\n  \"MA\", 2014, 4,\n  \"MA\", 2015, 8,\n  \"MA\", 2016, 2,\n  \"MA\", 2017, 2,\n  \"NJ\", 2012, 4,\n  \"NJ\", 2013, 4,\n  \"NJ\", 2014, 4,\n  \"NJ\", 2015, 8,\n  \"NJ\", 2016, 2,\n  \"NJ\", 2017, 2,\n  \"NY\", 2017, 4,\n  \"NY\", 2018, 4\n)\n```\n:::\n\n\n## Single State Year function call\n\nLets start simple for a single state year.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(findSVI)\ndata = findSVI::get_census_data(2018, \"zcta\", \"AZ\")\nresult = findSVI::get_svi(2018, data)\nglimpse(result)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 405\nColumns: 60\n$ GEOID      <chr> \"85003\", \"85004\", \"85006\", \"85007\", \"85008\", \"85009\", \"8501~\n$ NAME       <chr> \"ZCTA5 85003\", \"ZCTA5 85004\", \"ZCTA5 85006\", \"ZCTA5 85007\",~\n$ E_TOTPOP   <dbl> 8419, 6552, 28176, 14751, 62992, 49536, 7012, 20902, 27395,~\n$ E_HU       <dbl> 4849, 3572, 10549, 6114, 24001, 14451, 3992, 11206, 14871, ~\n$ E_HH       <dbl> 3912, 2753, 9251, 5157, 21902, 12338, 3560, 9903, 12867, 14~\n$ E_POV      <dbl> 1652, 1857, 10734, 5171, 18107, 17523, 824, 3136, 5190, 126~\n$ E_UNEMP    <dbl> 158, 328, 1169, 473, 2203, 1229, 191, 742, 1072, 1606, 955,~\n$ E_PCI      <dbl> 37766, 31227, 18335, 21958, 18661, 13550, 53630, 41512, 333~\n$ E_NOHSDP   <dbl> 1033, 577, 6383, 2916, 10725, 12469, 193, 1020, 2627, 5856,~\n$ E_AGE65    <dbl> 1003, 647, 1914, 1656, 3573, 3182, 1214, 2529, 3333, 3755, ~\n$ E_AGE17    <dbl> 1007, 455, 7733, 3949, 17190, 14676, 1061, 3568, 4980, 1133~\n$ E_DISABL   <dbl> 1044, 917, 2962, 2002, 5015, 4447, 718, 2799, 3185, 4462, 3~\n$ E_SNGPNT   <dbl> 209, 109, 1348, 742, 3569, 2319, 203, 748, 1258, 2472, 908,~\n$ E_MINRTY   <dbl> 4117, 2749, 20912, 10844, 47257, 43532, 1870, 8098, 12918, ~\n$ E_LIMENG   <dbl> 400, 190, 4487, 1579, 8285, 10016, 18, 367, 1114, 4644, 139~\n$ E_MUNIT    <dbl> 2065, 2165, 1187, 745, 9209, 1188, 1692, 3160, 4222, 5451, ~\n$ E_MOBILE   <dbl> 0, 0, 352, 105, 1123, 1489, 0, 104, 168, 217, 259, 669, 106~\n$ E_CROWD    <dbl> 64, 77, 1249, 505, 2809, 2052, 18, 325, 632, 1600, 752, 243~\n$ E_NOVEH    <dbl> 663, 709, 1537, 1122, 2941, 1875, 375, 1186, 1769, 2950, 16~\n$ E_GROUPQ   <dbl> 993, 1693, 504, 500, 578, 4341, 243, 294, 160, 235, 366, 93~\n$ EP_POV     <dbl> 22.0, 35.0, 38.5, 35.3, 29.0, 38.6, 12.2, 15.1, 19.1, 31.9,~\n$ EP_UNEMP   <dbl> 3.5, 8.4, 8.3, 7.1, 6.3, 6.8, 4.5, 5.8, 6.7, 8.6, 4.6, 7.0,~\n$ EP_PCI     <dbl> 37766, 31227, 18335, 21958, 18661, 13550, 53630, 41512, 333~\n$ EP_NOHSDP  <dbl> 15.3, 14.5, 36.1, 30.6, 28.5, 44.1, 3.4, 6.4, 13.1, 23.7, 1~\n$ EP_AGE65   <dbl> 11.9, 9.9, 6.8, 11.2, 5.7, 6.4, 17.3, 12.1, 12.2, 9.4, 14.6~\n$ EP_AGE17   <dbl> 12.0, 6.9, 27.4, 26.8, 27.3, 29.6, 15.1, 17.1, 18.2, 28.4, ~\n$ EP_DISABL  <dbl> 13.9, 14.0, 10.6, 13.6, 8.0, 9.8, 10.6, 13.4, 11.7, 11.2, 9~\n$ EP_SNGPNT  <dbl> 5.3, 4.0, 14.6, 14.4, 16.3, 18.8, 5.7, 7.6, 9.8, 16.6, 5.5,~\n$ EP_MINRTY  <dbl> 48.9, 42.0, 74.2, 73.5, 75.0, 87.9, 26.7, 38.7, 47.2, 69.6,~\n$ EP_LIMENG  <dbl> 5.0, 2.9, 17.2, 11.5, 14.4, 22.1, 0.3, 1.8, 4.3, 12.7, 4.1,~\n$ EP_MUNIT   <dbl> 42.6, 60.6, 11.3, 12.2, 38.4, 8.2, 42.4, 28.2, 28.4, 31.9, ~\n$ EP_MOBILE  <dbl> 0.0, 0.0, 3.3, 1.7, 4.7, 10.3, 0.0, 0.9, 1.1, 1.3, 1.3, 5.0~\n$ EP_CROWD   <dbl> 1.6, 2.8, 13.5, 9.8, 12.8, 16.6, 0.5, 3.3, 4.9, 10.7, 4.5, ~\n$ EP_NOVEH   <dbl> 16.9, 25.8, 16.6, 21.8, 13.4, 15.2, 10.5, 12.0, 13.7, 19.8,~\n$ EP_GROUPQ  <dbl> 11.8, 25.8, 1.8, 3.4, 0.9, 8.8, 3.5, 1.4, 0.6, 0.6, 1.0, 2.~\n$ EPL_POV    <dbl> 0.6837, 0.8597, 0.8903, 0.8622, 0.7883, 0.8929, 0.3750, 0.4~\n$ EPL_UNEMP  <dbl> 0.1548, 0.6548, 0.6497, 0.5558, 0.4569, 0.5102, 0.2538, 0.4~\n$ EPL_PCI    <dbl> 0.1705, 0.2901, 0.7430, 0.5980, 0.7405, 0.8804, 0.0407, 0.1~\n$ EPL_NOHSDP <dbl> 0.6203, 0.5873, 0.9418, 0.8785, 0.8506, 0.9772, 0.1266, 0.2~\n$ EPL_AGE65  <dbl> 0.3089, 0.2127, 0.0785, 0.2734, 0.0582, 0.0684, 0.5316, 0.3~\n$ EPL_AGE17  <dbl> 0.1620, 0.0937, 0.7013, 0.6734, 0.6937, 0.8000, 0.2608, 0.3~\n$ EPL_DISABL <dbl> 0.4656, 0.4707, 0.2646, 0.4478, 0.0916, 0.1908, 0.2646, 0.4~\n$ EPL_SNGPNT <dbl> 0.3436, 0.2462, 0.8590, 0.8538, 0.9000, 0.9564, 0.3872, 0.4~\n$ EPL_MINRTY <dbl> 0.6405, 0.5848, 0.7823, 0.7747, 0.7848, 0.8430, 0.3570, 0.5~\n$ EPL_LIMENG <dbl> 0.7443, 0.6127, 0.9620, 0.8937, 0.9342, 0.9873, 0.1316, 0.4~\n$ EPL_MUNIT  <dbl> 0.9898, 0.9974, 0.7928, 0.8031, 0.9821, 0.7391, 0.9872, 0.9~\n$ EPL_MOBILE <dbl> 0.0000, 0.0000, 0.2813, 0.2148, 0.3299, 0.4578, 0.0000, 0.1~\n$ EPL_CROWD  <dbl> 0.3026, 0.4538, 0.8538, 0.8000, 0.8410, 0.9026, 0.1667, 0.5~\n$ EPL_NOVEH  <dbl> 0.8872, 0.9744, 0.8846, 0.9462, 0.8231, 0.8615, 0.7641, 0.7~\n$ EPL_GROUPQ <dbl> 0.9418, 0.9671, 0.8051, 0.8658, 0.6886, 0.9291, 0.8709, 0.7~\n$ SPL_theme1 <dbl> 1.6293, 2.3919, 3.2248, 2.8945, 2.8363, 3.2607, 0.7961, 1.2~\n$ SPL_theme2 <dbl> 1.2801, 1.0233, 1.9034, 2.2484, 1.7435, 2.0156, 1.4442, 1.5~\n$ SPL_theme3 <dbl> 1.3848, 1.1975, 1.7443, 1.6684, 1.7190, 1.8303, 0.4886, 1.0~\n$ SPL_theme4 <dbl> 3.1214, 3.3927, 3.6176, 3.6299, 3.6647, 3.8901, 2.7889, 3.1~\n$ RPL_theme1 <dbl> 0.4025, 0.6177, 0.8405, 0.7722, 0.7646, 0.8633, 0.1418, 0.2~\n$ RPL_theme2 <dbl> 0.0684, 0.0380, 0.3722, 0.7266, 0.2506, 0.5063, 0.0962, 0.1~\n$ RPL_theme3 <dbl> 0.7063, 0.6076, 0.9038, 0.8506, 0.8886, 0.9620, 0.2253, 0.5~\n$ RPL_theme4 <dbl> 0.7873, 0.8962, 0.9544, 0.9570, 0.9620, 0.9899, 0.6658, 0.7~\n$ SPL_themes <dbl> 7.4156, 8.0054, 10.4901, 10.4412, 9.9635, 10.9967, 5.5178, ~\n$ RPL_themes <dbl> 0.4911, 0.5848, 0.9089, 0.9013, 0.8532, 0.9595, 0.2582, 0.4~\n```\n:::\n:::\n\n\nGreat lets see the\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../../../site_libs/pagedtable-1.1/css/pagedtable.css\" rel=\"stylesheet\" />\r\n<script src=\"../../../../site_libs/pagedtable-1.1/js/pagedtable.js\"></script>\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}