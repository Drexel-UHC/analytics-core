{
  "hash": "585640df2a6899f95d083e2f71d3dd01",
  "result": {
    "markdown": "---\ntitle: \"Data Science Working Group: Hello\"\nsubtitle: 'Introduction to group vision, tooling and next steps.'\nauthor: \n  - name: Usama Bilal\n    orcid: 0000-0002-9868-7773\n  - name: Ran Li\n    orcid: 0000-0002-4699-4755\ndate: \"2023-07-06\"\nformat:\n  revealjs:\n    theme: default\n    self-contained: true \neditor: visual\n---\n\n\n## Overview {.smaller}\n\n-   Big Picture Vision\n-   Toolkit\n-   Integration\n\n## Big Picture Vision {.smaller}\n\n![](images/P20%20Conceptual%20+%20Platform%20Schematics%20V2%20(3)-01.png){fig-align=\"center\"}\n\n## Context {.smaller}\n\n-   The DSWG was created to around a directive to think about projects at a 'system' level from raw data to deliverable to researchers, policy-makers and community members.\n\n-   Research is 80% data cleaning (**Access**) and 20% actual research (**Understand**)\n\n-   Research and data are much more valuable if they can be **communicated** to stakeholders (other researchers, policy makers, community).\n\n-   We aim to sustain a workflow that is built on **software engineering best practices** and develop students/staff that to provide this as service to projects both internal and external to UHC.\n\n## Toolkit {.smaller}\n\n1.  Principles\n    -   FAIR\n    -   Keep abreast of industry trends\n    -   Tool agnostic\n2.  Access\n    -   Grammar of data manipulation\n    -   Data warehousing\n3.  Communicate\n    -   GitHub\n    -   Packages\n    -   Literate Programming\n    -   Dashboards\n    -   Web development\n\n## 1.1 FAIR\n\n-   FAIR: Findable, Accessible, Interoperable, Reusable\n-   Code: web documentation, version control, packaging\n-   Data: metadata, lineage, versioning, web documentation\n-   Research: findable, accessible stories told to target audiences.\n\n## 1.2 Innovation (pt 1) {.smaller}\n\n-   NIH create an [Office of Data Science Strategy](https://datascience.nih.gov/)\n    -   findability, interconnectivity, and interoperability of NIH-funded biomedical data sets and resources\n    -   integration of existing data management tools and development of new ones\n    -   universalization of innovative algorithms and tools created by academic scientists into enterprise-ready resources that meet industry standards of ease of use and efficiency of operation\n    -   growing costs of data management.\n\n## 1.2 Innovation (pt 2) {.smaller}\n\n-   Pharma: [Roche](https://www.youtube.com/watch?v=nqJsLSLd39A&ab_channel=PositPBC) and big pharma to default to R as primay language for new trials\n-   Modern Data warehousing: [helping data teams work like software engineers with DBT](https://github.com/dbt-labs)\n-   Full stack Component based Javascript frameworks. React.js, [Next.js](https://nextjs.org/), [Svelte.js](https://svelte.dev/)\n-   Journalism embrace of open source Javascript for story telling (e.g. [Rueters graphics patterns](https://reuters-graphics.github.io/example_svelte-graph-patterns/)\n-   Web hosting is free (Azure static web app, GH pages, Netlify, AWS amplify)\n-   Serverless infrastructure is cheap and easy (AWS lambda, Azure function apps)\n\n## 1.3 Language Agnostic {.smaller}\n\n-   Move away from having one solution for how we do promgramming\n-   The flexibility to move towards the best tool for solving problems is paramount\n-   So tools we are using now are not the destination. Its part of a journey that allows us to constantly shift to what the best tool is best for us in the future.\n-   Embrace open source culture of collaboratively building solutions as software developers rather than software consumers.\n\n## 2.1 Dplyr - Grammar of data manipulation {.smaller .scrollable}\n\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div id=\"htmlwidget-1cc1832705b098fb6df2\" class=\"reactable html-widget\" style=\"width:auto;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-1cc1832705b098fb6df2\">{\"x\":{\"tag\":{\"name\":\"Reactable\",\"attribs\":{\"data\":{\"rowid\":[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,169,170,171,172,173,174,175,176,177,178,179,180,181,182,183,184,185,186,187,188,189,190,191,192,193,194,195,196,197,198,199,200,201,202,203,204,205,206,207,208,209,210,211,212,213,214,215,216,217,218,219,220,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344],\"species\":[\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Adelie\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Gentoo\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\",\"Chinstrap\"],\"island\":[\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Torgersen\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Biscoe\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\",\"Dream\"],\"bill_length_mm\":[39.1,39.5,40.3,\"NA\",36.7,39.3,38.9,39.2,34.1,42,37.8,37.8,41.1,38.6,34.6,36.6,38.7,42.5,34.4,46,37.8,37.7,35.9,38.2,38.8,35.3,40.6,40.5,37.9,40.5,39.5,37.2,39.5,40.9,36.4,39.2,38.8,42.2,37.6,39.8,36.5,40.8,36,44.1,37,39.6,41.1,37.5,36,42.3,39.6,40.1,35,42,34.5,41.4,39,40.6,36.5,37.6,35.7,41.3,37.6,41.1,36.4,41.6,35.5,41.1,35.9,41.8,33.5,39.7,39.6,45.8,35.5,42.8,40.9,37.2,36.2,42.1,34.6,42.9,36.7,35.1,37.3,41.3,36.3,36.9,38.3,38.9,35.7,41.1,34,39.6,36.2,40.8,38.1,40.3,33.1,43.2,35,41,37.7,37.8,37.9,39.7,38.6,38.2,38.1,43.2,38.1,45.6,39.7,42.2,39.6,42.7,38.6,37.3,35.7,41.1,36.2,37.7,40.2,41.4,35.2,40.6,38.8,41.5,39,44.1,38.5,43.1,36.8,37.5,38.1,41.1,35.6,40.2,37,39.7,40.2,40.6,32.1,40.7,37.3,39,39.2,36.6,36,37.8,36,41.5,46.1,50,48.7,50,47.6,46.5,45.4,46.7,43.3,46.8,40.9,49,45.5,48.4,45.8,49.3,42,49.2,46.2,48.7,50.2,45.1,46.5,46.3,42.9,46.1,44.5,47.8,48.2,50,47.3,42.8,45.1,59.6,49.1,48.4,42.6,44.4,44,48.7,42.7,49.6,45.3,49.6,50.5,43.6,45.5,50.5,44.9,45.2,46.6,48.5,45.1,50.1,46.5,45,43.8,45.5,43.2,50.4,45.3,46.2,45.7,54.3,45.8,49.8,46.2,49.5,43.5,50.7,47.7,46.4,48.2,46.5,46.4,48.6,47.5,51.1,45.2,45.2,49.1,52.5,47.4,50,44.9,50.8,43.4,51.3,47.5,52.1,47.5,52.2,45.5,49.5,44.5,50.8,49.4,46.9,48.4,51.1,48.5,55.9,47.2,49.1,47.3,46.8,41.7,53.4,43.3,48.1,50.5,49.8,43.5,51.5,46.2,55.1,44.5,48.8,47.2,\"NA\",46.8,50.4,45.2,49.9,46.5,50,51.3,45.4,52.7,45.2,46.1,51.3,46,51.3,46.6,51.7,47,52,45.9,50.5,50.3,58,46.4,49.2,42.4,48.5,43.2,50.6,46.7,52,50.5,49.5,46.4,52.8,40.9,54.2,42.5,51,49.7,47.5,47.6,52,46.9,53.5,49,46.2,50.9,45.5,50.9,50.8,50.1,49,51.5,49.8,48.1,51.4,45.7,50.7,42.5,52.2,45.2,49.3,50.2,45.6,51.9,46.8,45.7,55.8,43.5,49.6,50.8,50.2],\"bill_depth_mm\":[18.7,17.4,18,\"NA\",19.3,20.6,17.8,19.6,18.1,20.2,17.1,17.3,17.6,21.2,21.1,17.8,19,20.7,18.4,21.5,18.3,18.7,19.2,18.1,17.2,18.9,18.6,17.9,18.6,18.9,16.7,18.1,17.8,18.9,17,21.1,20,18.5,19.3,19.1,18,18.4,18.5,19.7,16.9,18.8,19,18.9,17.9,21.2,17.7,18.9,17.9,19.5,18.1,18.6,17.5,18.8,16.6,19.1,16.9,21.1,17,18.2,17.1,18,16.2,19.1,16.6,19.4,19,18.4,17.2,18.9,17.5,18.5,16.8,19.4,16.1,19.1,17.2,17.6,18.8,19.4,17.8,20.3,19.5,18.6,19.2,18.8,18,18.1,17.1,18.1,17.3,18.9,18.6,18.5,16.1,18.5,17.9,20,16,20,18.6,18.9,17.2,20,17,19,16.5,20.3,17.7,19.5,20.7,18.3,17,20.5,17,18.6,17.2,19.8,17,18.5,15.9,19,17.6,18.3,17.1,18,17.9,19.2,18.5,18.5,17.6,17.5,17.5,20.1,16.5,17.9,17.1,17.2,15.5,17,16.8,18.7,18.6,18.4,17.8,18.1,17.1,18.5,13.2,16.3,14.1,15.2,14.5,13.5,14.6,15.3,13.4,15.4,13.7,16.1,13.7,14.6,14.6,15.7,13.5,15.2,14.5,15.1,14.3,14.5,14.5,15.8,13.1,15.1,14.3,15,14.3,15.3,15.3,14.2,14.5,17,14.8,16.3,13.7,17.3,13.6,15.7,13.7,16,13.7,15,15.9,13.9,13.9,15.9,13.3,15.8,14.2,14.1,14.4,15,14.4,15.4,13.9,15,14.5,15.3,13.8,14.9,13.9,15.7,14.2,16.8,14.4,16.2,14.2,15,15,15.6,15.6,14.8,15,16,14.2,16.3,13.8,16.4,14.5,15.6,14.6,15.9,13.8,17.3,14.4,14.2,14,17,15,17.1,14.5,16.1,14.7,15.7,15.8,14.6,14.4,16.5,15,17,15.5,15,13.8,16.1,14.7,15.8,14,15.1,15.2,15.9,15.2,16.3,14.1,16,15.7,16.2,13.7,\"NA\",14.3,15.7,14.8,16.1,17.9,19.5,19.2,18.7,19.8,17.8,18.2,18.2,18.9,19.9,17.8,20.3,17.3,18.1,17.1,19.6,20,17.8,18.6,18.2,17.3,17.5,16.6,19.4,17.9,19,18.4,19,17.8,20,16.6,20.8,16.7,18.8,18.6,16.8,18.3,20.7,16.6,19.9,19.5,17.5,19.1,17,17.9,18.5,17.9,19.6,18.7,17.3,16.4,19,17.3,19.7,17.3,18.8,16.6,19.9,18.8,19.4,19.5,16.5,17,19.8,18.1,18.2,19,18.7],\"flipper_length_mm\":[181,186,195,\"NA\",193,190,181,195,193,190,186,180,182,191,198,185,195,197,184,194,174,180,189,185,180,187,183,187,172,180,178,178,188,184,195,196,190,180,181,184,182,195,186,196,185,190,182,179,190,191,186,188,190,200,187,191,186,193,181,194,185,195,185,192,184,192,195,188,190,198,190,190,196,197,190,195,191,184,187,195,189,196,187,193,191,194,190,189,189,190,202,205,185,186,187,208,190,196,178,192,192,203,183,190,193,184,199,190,181,197,198,191,193,197,191,196,188,199,189,189,187,198,176,202,186,199,191,195,191,210,190,197,193,199,187,190,191,200,185,193,193,187,188,190,192,185,190,184,195,193,187,201,211,230,210,218,215,210,211,219,209,215,214,216,214,213,210,217,210,221,209,222,218,215,213,215,215,215,216,215,210,220,222,209,207,230,220,220,213,219,208,208,208,225,210,216,222,217,210,225,213,215,210,220,210,225,217,220,208,220,208,224,208,221,214,231,219,230,214,229,220,223,216,221,221,217,216,230,209,220,215,223,212,221,212,224,212,228,218,218,212,230,218,228,212,224,214,226,216,222,203,225,219,228,215,228,216,215,210,219,208,209,216,229,213,230,217,230,217,222,214,\"NA\",215,222,212,213,192,196,193,188,197,198,178,197,195,198,193,194,185,201,190,201,197,181,190,195,181,191,187,193,195,197,200,200,191,205,187,201,187,203,195,199,195,210,192,205,210,187,196,196,196,201,190,212,187,198,199,201,193,203,187,197,191,203,202,194,206,189,195,207,202,193,210,198],\"body_mass_g\":[3750,3800,3250,\"NA\",3450,3650,3625,4675,3475,4250,3300,3700,3200,3800,4400,3700,3450,4500,3325,4200,3400,3600,3800,3950,3800,3800,3550,3200,3150,3950,3250,3900,3300,3900,3325,4150,3950,3550,3300,4650,3150,3900,3100,4400,3000,4600,3425,2975,3450,4150,3500,4300,3450,4050,2900,3700,3550,3800,2850,3750,3150,4400,3600,4050,2850,3950,3350,4100,3050,4450,3600,3900,3550,4150,3700,4250,3700,3900,3550,4000,3200,4700,3800,4200,3350,3550,3800,3500,3950,3600,3550,4300,3400,4450,3300,4300,3700,4350,2900,4100,3725,4725,3075,4250,2925,3550,3750,3900,3175,4775,3825,4600,3200,4275,3900,4075,2900,3775,3350,3325,3150,3500,3450,3875,3050,4000,3275,4300,3050,4000,3325,3500,3500,4475,3425,3900,3175,3975,3400,4250,3400,3475,3050,3725,3000,3650,4250,3475,3450,3750,3700,4000,4500,5700,4450,5700,5400,4550,4800,5200,4400,5150,4650,5550,4650,5850,4200,5850,4150,6300,4800,5350,5700,5000,4400,5050,5000,5100,4100,5650,4600,5550,5250,4700,5050,6050,5150,5400,4950,5250,4350,5350,3950,5700,4300,4750,5550,4900,4200,5400,5100,5300,4850,5300,4400,5000,4900,5050,4300,5000,4450,5550,4200,5300,4400,5650,4700,5700,4650,5800,4700,5550,4750,5000,5100,5200,4700,5800,4600,6000,4750,5950,4625,5450,4725,5350,4750,5600,4600,5300,4875,5550,4950,5400,4750,5650,4850,5200,4925,4875,4625,5250,4850,5600,4975,5500,4725,5500,4700,5500,4575,5500,5000,5950,4650,5500,4375,5850,4875,6000,4925,\"NA\",4850,5750,5200,5400,3500,3900,3650,3525,3725,3950,3250,3750,4150,3700,3800,3775,3700,4050,3575,4050,3300,3700,3450,4400,3600,3400,2900,3800,3300,4150,3400,3800,3700,4550,3200,4300,3350,4100,3600,3900,3850,4800,2700,4500,3950,3650,3550,3500,3675,4450,3400,4300,3250,3675,3325,3950,3600,4050,3350,3450,3250,4050,3800,3525,3950,3650,3650,4000,3400,3775,4100,3775],\"sex\":[\"male\",\"female\",\"female\",null,\"female\",\"male\",\"female\",\"male\",null,null,null,null,\"female\",\"male\",\"male\",\"female\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"male\",\"female\",\"male\",\"female\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"male\",\"female\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"male\",null,\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"male\",\"female\",\"male\",\"female\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"male\",\"female\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"male\",\"female\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"male\",\"female\",\"female\",\"male\",\"female\",\"male\",null,\"male\",\"female\",\"male\",\"male\",\"female\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"male\",\"female\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",null,\"male\",\"female\",\"male\",\"female\",\"male\",\"male\",\"female\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"male\",\"female\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",null,\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",null,\"male\",\"female\",null,\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"male\",\"female\",\"male\",\"female\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"male\",\"female\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"male\",\"female\",\"female\",\"male\",\"female\",\"male\",\"male\",\"female\",\"male\",\"female\",\"female\",\"male\",\"female\",\"male\",\"male\",\"female\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"female\",\"male\",\"male\",\"female\",\"male\",\"female\",\"female\",\"male\",\"female\",\"male\",\"male\",\"female\"],\"year},\"columns\":[{\"accessor\":\"rowid\",\"name\":\"rowid\",\"type\":\"numeric\"},{\"accessor\":\"species\",\"name\":\"species\",\"type\":\"character\"},{\"accessor\":\"island\",\"name\":\"island\",\"type\":\"character\"},{\"accessor\":\"bill_length_mm\",\"name\":\"bill_length_mm\",\"type\":\"numeric\"},{\"accessor\":\"bill_depth_mm\",\"name\":\"bill_depth_mm\",\"type\":\"numeric\"},{\"accessor\":\"flipper_length_mm\",\"name\":\"flipper_length_mm\",\"type\":\"numeric\"},{\"accessor\":\"body_mass_g\",\"name\":\"body_mass_g\",\"type\":\"numeric\"},{\"accessor\":\"sex\",\"name\":\"sex\",\"type\":\"character\"},{\"accessor\":\"year\",\"name\":\"year\",\"type\":\"numeric\"}],\"defaultPageSize\":4,\"paginationType\":\"numbers\",\"showPageInfo\":true,\"minRows\":1,\"compact\":true,\"dataKey\":\"ee409c1df2f58b583b7a0e49ca5ab9d8\"},\"children\":[]},\"class\":\"reactR_markup\"},\"evals\":[],\"jsHooks\":[]}</script>\n```\n:::\n\n::: {.cell-output .cell-output-stdout}\n```\n  rowid species    island bill_length_mm bill_depth_mm flipper_length_mm\n1     1  Adelie Torgersen           39.1          18.7               181\n2     2  Adelie Torgersen           39.5          17.4               186\n3     3  Adelie Torgersen           40.3          18.0               195\n4     4  Adelie Torgersen             NA            NA                NA\n5     5  Adelie Torgersen           36.7          19.3               193\n6     6  Adelie Torgersen           39.3          20.6               190\n  body_mass_g    sex year\n1        3750   male 2007\n2        3800 female 2007\n3        3250 female 2007\n4          NA   <NA> 2007\n5        3450 female 2007\n6        3650   male 2007\n```\n:::\n:::\n\n\n## 2.1 Dplyr - flat files (.csv) {.smaller .scrollable}\n\n::: panel-tabset\n## Semantics\n\n> Research Question:Calculate ratio of bill length to depth then calculate rank by species. Return a table whose rows are arranged in order by species and contiaining only relevant columns.\n\n1.  Use penguins as the input data\n2.  Group by species\n3.  Calculate bill length depth ratio\n4.  Arrange rows based on rank\n5.  Select columns: species, rank, ratio\n6.  Calculate rank of ratio_bill\n\n## .csv\n\n``` {.r code-line-numbers=\"|1-2|2|3|4|5|6\"}\ndata = read.csv(penguins_data_url)\ndata %>%\n  group_by(species) %>%\n  mutate(ratio_bill = bill_length_mm/bill_depth_mm) %>% \n  select(species, ratio_bill ) %>% \n  mutate(rank = rank(desc(ratio_bill ))) %>% \n  arrange(rank)\n```\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 344 x 3\n# Groups:   species [3]\n   species   ratio_bill  rank\n   <chr>          <dbl> <dbl>\n 1 Adelie          2.45     1\n 2 Gentoo          3.61     1\n 3 Chinstrap       3.26     1\n 4 Adelie          2.44     2\n 5 Gentoo          3.51     2\n 6 Chinstrap       2.93     2\n 7 Adelie          2.43     3\n 8 Gentoo          3.51     3\n 9 Chinstrap       2.88     3\n10 Adelie          2.42     4\n# i 334 more rows\n```\n:::\n:::\n\n:::\n\n## 2.1 Dplyr - flat files (.csv) {.smaller .scrollable}\n\n::: panel-tabset\n## Semantics\n\n> Research Question:Calculate ratio of bill length to depth then calculate rank by species. Return a table whose rows are arranged in order by species and contiaining only relevant columns.\n\n1.  Use penguins as the input data\n2.  Group by species\n3.  Calculate bill length depth ratio\n4.  Arrange rows based on rank\n5.  Select columns: species, rank, ratio\n6.  Calculate rank of ratio_bill\n\n## Dplyr + .csv\n\n``` {.r code-line-numbers=\"|6|5|4|3|2|1\"}\ndata %>%\n  group_by(species) %>%\n  mutate(ratio_bill = bill_length_mm/bill_depth_mm) %>% \n  select(species, ratio_bill ) %>% \n  mutate(rank = rank(desc(ratio_bill ))) %>% \n  arrange(rank)\n```\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 344 x 3\n# Groups:   species [3]\n   species   ratio_bill  rank\n   <chr>          <dbl> <dbl>\n 1 Adelie          2.45     1\n 2 Gentoo          3.61     1\n 3 Chinstrap       3.26     1\n 4 Adelie          2.44     2\n 5 Gentoo          3.51     2\n 6 Chinstrap       2.93     2\n 7 Adelie          2.43     3\n 8 Gentoo          3.51     3\n 9 Chinstrap       2.88     3\n10 Adelie          2.42     4\n# i 334 more rows\n```\n:::\n:::\n\n:::\n\n## 2.1 Dplyr - Databases (e.g. SQLite) {.smaller .scrollable}\n\n::: panel-tabset\n## Semantics\n\n> Research Question:Calculate ratio of bill length to depth then calculate rank by species. Return a table whose rows are arranged in order by species and contiaining only relevant columns.\n\n1.  Use penguins as the input data\n2.  Group by species\n3.  Calculate bill length depth ratio\n4.  Arrange rows based on rank\n5.  Select columns: species, rank, ratio\n6.  Calculate rank of ratio_bill\n\n## Dplyr + Database\n\n``` {.r code-line-numbers=\"|1-2|3|4|5|6|7\"}\ndatabase  <- memdb_frame(data)\nquery = database %>%\n  group_by(species) %>%\n  mutate(ratio_bill = bill_length_mm/bill_depth_mm) %>% \n  select(species, ratio_bill ) %>% \n  mutate(rank = rank(desc(ratio_bill ))) %>% \n  arrange(rank)\n\nquery %>% collect()\n```\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 344 x 3\n# Groups:   species [3]\n   species   ratio_bill  rank\n   <chr>          <dbl> <int>\n 1 Adelie          2.45     1\n 2 Chinstrap       3.26     1\n 3 Gentoo          3.61     1\n 4 Adelie          2.44     2\n 5 Chinstrap       2.93     2\n 6 Gentoo          3.51     2\n 7 Adelie          2.43     3\n 8 Chinstrap       2.88     3\n 9 Gentoo          3.51     3\n10 Adelie          2.42     4\n# i 334 more rows\n```\n:::\n:::\n\n\n## Dplyr + SQL\n\n``` r\nquery %>% show_query()\n```\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n<SQL>\nSELECT\n  *,\n  RANK() OVER (PARTITION BY `species` ORDER BY `ratio_bill` DESC) AS `rank`\nFROM (\n  SELECT `species`, `bill_length_mm` / `bill_depth_mm` AS `ratio_bill`\n  FROM `dbplyr_001`\n)\nORDER BY `rank`\n```\n:::\n:::\n\n:::\n\n## 2.1 Dplyr - Columnar storage (e.g. Parquet) {.smaller .scrollable}\n\n::: panel-tabset\n## Semantics\n\n> Research Question:Calculate ratio of bill length to depth then calculate rank by species. Return a table whose rows are arranged in order by species and contiaining only relevant columns.\n\n1.  Use penguins as the input data\n2.  Group by species\n3.  Calculate bill length depth ratio\n4.  Arrange rows based on rank\n5.  Select columns: species, rank, ratio\n6.  Calculate rank of ratio_bill\n\n## Dplyr + parquet\n\n``` {.r code-line-numbers=\"|1-2|3|4|5|6|7\"}\n  dataset = open_dataset('penguins.parquet')\n  dataset %>%\n    group_by(species) %>%\n    mutate(ratio_bill = bill_length_mm/bill_depth_mm) %>% \n    select(species, ratio_bill ) %>% \n    collect() %>% \n    mutate(rank = rank(desc(ratio_bill ))) %>% \n    arrange(rank)\n```\n\n\n::: {.cell}\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 344 x 3\n# Groups:   species [3]\n   species   ratio_bill  rank\n   <chr>          <dbl> <dbl>\n 1 Adelie          2.45     1\n 2 Gentoo          3.61     1\n 3 Chinstrap       3.26     1\n 4 Adelie          2.44     2\n 5 Gentoo          3.51     2\n 6 Chinstrap       2.93     2\n 7 Adelie          2.43     3\n 8 Gentoo          3.51     3\n 9 Chinstrap       2.88     3\n10 Adelie          2.42     4\n# i 334 more rows\n```\n:::\n:::\n\n:::\n\n## 1. Dplyr - multilingual {.smaller .scrollable}\n\n-   R: [dplyr](https://dplyr.tidyverse.org/), [dbplyr](https://dbplyr.tidyverse.org/)\n-   JavaScript: [tidy.js](https://pbeshai.github.io/tidy/)\n-   Python: [Polars](https://tidypolars.readthedocs.io/en/latest/#general-syntax)\n-   SQL: [PRQL](https://prql-lang.org/)\n\n## 1. Dplyr - Summary {.smaller .scrollable}\n\n-   Foundation of R&D is data manipulation\n-   Dplyr work flow focuses on semantics and not syntax. meaning easy onboarding.\n-   It is expressive: meaning complex wrangling logic in less code = faster development = less maintenance\n-   It is powerful: works with databases and modern data formats.\n-   Skills translatable to other languages\n-   \n\n## 2.2 Data Warehousing {.smaller .scrollable}\n\n-   While dplyr is great for working on specific tasks and projects (e.g. operationalizing a dataset). It does not have the tools required for data warehousing.\n-   Data modeling is like designing the blueprint for a house, but instead of rooms and doors, you're planning where to store different types of information and how they connect to each other.\n-   It is a key tool to implementing FAIR at an organizaiton level, in order to reduce repeated work, handle big data, document data lineage, and make outputs accessible.\n-   DBT:\n    -   HCUP: https://drexel-uhc.github.io/hcup-dbt/\n    -   DBT training: https://drexel-uhc.github.io/analytics-corner/pages/manuals/dbt/overview.html\n\n## 3.1 Communicate Software (GitHub) {.smaller .scrollable}\n\n-   GitHub is a online version control and project management platform\n    -   developer features (git, CI/DI, virtual machines)\n    -   project management features (issues, discussions, projects, teams, emails)\n    -   website host\n    -   package host\n    -   [Example of collaboration](https://drexel-uhc.github.io/analytics-corner/pages/manuals/git-github/case-study-project-transition-management.html)\n-   Resources:\n    -   [UHC Github Organization](https://github.com/Drexel-UHC)\n    -   [DSWG GitHub Manual](https://drexel-uhc.github.io/analytics-corner/pages/manuals/git-github/overview.html)\n    -   [NIH GitHub Resource Center](https://github.nih.gov/)\n-   Version control is fundamental to reproducibility and effective collaboration.\n\n## 3.2 Reuse Software: R Packages {.smaller .scrollable}\n\n-   R packages are a mature set of best practices, guidelines how how to write R code and the tools to share them.\n-   This has led to very influential opens source software ecoystems that are comparable or surpass enterprise solutions.\n    -   tidycensus\n    -   tidyverse\n-   Instead email code and writing .doc. R packages give us a easy way to develop custom solutions for our problems, document them and share them.\n-   A local package ecosystem will help automate so many tasks and they also can be published to increase the impact of the work we do.\n-   Examples from the DSWG\n    -   [findSVI](https://heli-xu.github.io/findSVI/)\n    -   [shinyUHC](https://drexel-uhc.github.io/shinyUHC/)\n    -   [tidySALURBAL](https://drexel-uhc.github.io/tidySALURBAL/)\n    -   [HERcrosswalks](https://github.com/her43/HERcrosswalks)\n\n## 3.3 Communicate results: Quarto {.smaller .scrollable}\n\n-   Literate Programming is the idea of being able to notebook with text (markdown) and code (R,Python, Julia, Javascript).\n-   [Knitr](https://github.com/yihui/knitr) is an engine that combines R + .md\n-   [Jupyter](https://jupyter.org/) is an engine that combines Python + .md\n-   [Quarto](https://quarto.org/) builds onto over various language engines (Knitr, Jupyter) and binds outputs to various formats (web slides, ppt, word, html, websites, books, blogs)\n-   Allows analysts to rapid share their work in accessible formats.\n-   It saves time: no copying into word or ptt. single source of code -\\> multiple outputs.\n-   Examples:\n    -   [DSWG page](https://drexel-uhc.github.io/analytics-corner/)\n    -   [BCHC COVID Inequities Website/Blog](https://www.covid-inequities.info/)\n    -   [SALURBAL renovation page](https://drexel-uhc.github.io/salurbal-fair-renovations/)\n    -   [R and Python Data Cheat Sheet](https://ran-codes.github.io/python-rstudio/)\n    -   [External: Royal Statiscal Society](https://realworlddatascience.net/)\n\n## 3.4 Communicate analytic results: Dashboards {.smaller .scrollable}\n\n-   [Shiny](https://shiny.posit.co/) is a multi-lingual (R, Python) tool for building web applications without needing any web development skills\n\n-   Interactivity is a must as data becomes more complex and higer volume. A dashboard is much more accessible that a 200 page PDF to communicate analytic results.\n\n-   Gives analysts the ability to extend their R/Python expertise by adding interactivity.\n\n-   The UHC already has infrastructure to deploy Shiny applications with just a click of a button.\n\n-   Easy to learn and fast to develop. Examples\n\n    -   [UHC-PDPH Cancer app 2](https://drexel-uhc.shinyapps.io/cancer_in_philadelphia_neighborhoods/)\n    -   [SALURBAL Heat Manuscript](https://drexel-uhc.shinyapps.io/MS85/)\n    -   [BCHC COVID inequities](https://drexel-uhc.shinyapps.io/bchc_covid19/)\n    -   [UHC Student's dashboard](https://drexel-uhc.shinyapps.io/Congress_Mortality/)\n\n## 3.5 Communicate results: Web content {.smaller .scrollable}\n\n-   Why not dashbaords:\n    -   server based which requires infrastructure and compute costs\n    -   cold starts for consumption plans are not feasible for public facing content\n    -   great for communicating analytic results but not telling stories. policy makers and community members don't have time to click around\n    -   Dashboards need a server to run (R/Python) in addition to user brower to run (JS)\n-   We adopt indsutry trend to move everything to JS with modern JS frameworks: React.js, [Next.js](https://nextjs.org/), [Svelte.js](https://svelte.dev/)\n    -   Low cost\n    -   Highly flexible\n    -   Inter operable with many existing service API's\n    -   Harness open source JS codebases\n    -   Utilize server less computing (lambda/azure-functions) for any computations\n-   Examples:\n    -   [SALURBAL Data Portal](https://data.lacurbanhealth.org/).\n\n    -   Digital journalism\n\n        -   idea: [Digital Journalism for urban health](https://drexel-uhc.github.io/analytics-corner/pages/blog/issues/888%20-%20Scrollies/)\n\n        -   example: [The Pudding repository](https://github.com/the-pudding/eu-regions)\n\n        -   adaptation: [MAUP Philadelphia](https://mockup-uhc-graphics-maup.netlify.app/)\n\n## Toolkit Recap {.smaller}\n\n1.  Principles\n    -   FAIR\n    -   Keep abreast of industry trends\n    -   Tool agnostic\n2.  Access\n    -   Grammar of data manipulation\n    -   Data warehousing\n3.  Communicate\n    -   GitHub\n    -   Packages\n    -   Literate Programming\n    -   Dashboards\n    -   Web development\n\n## It takes a village\n\n![](images/village.JPG){fig-align=\"center\"}\n\n## 4. Integration with RDC\n\n-   Data/backend \\*\\*\n-   statistics\n-   front-end\n-   training/Data-Team \\*\\*\n\n## 4. Integration with Other Cores\n\n-   Training\n    -   Summer Institutes FAIR or DS course\n-   Policy\n    -   front-end\n-   Community Engagemet\n    -   front-end\n\n## Appendix: Rollout\n\n![](images/rollout.JPG){fig-align=\"center\"}\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../../../site_libs/core-js-2.5.3/shim.min.js\"></script>\r\n<script src=\"../../../../site_libs/react-17.0.0/react.min.js\"></script>\r\n<script src=\"../../../../site_libs/react-17.0.0/react-dom.min.js\"></script>\r\n<script src=\"../../../../site_libs/reactwidget-1.0.0/react-tools.js\"></script>\r\n<script src=\"../../../../site_libs/htmlwidgets-1.5.4/htmlwidgets.js\"></script>\r\n<script src=\"../../../../site_libs/reactable-binding-0.3.0/reactable.js\"></script>\r\n"
      ],
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    // dispatch for htmlwidgets\r\n    function fireSlideEnter() {\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n    }\r\n\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n      fireSlideEnter();\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}